/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package presentacion_computadora;

import presentacion_computadora.ventanas_auxiliares.PantallaColor;
import presentacion_computadora.ventanas_auxiliares.RenderJCombobox;
import presentacion_computadora.ventanas_auxiliares.CuadroTipoTexto;
import java.awt.Color;
import java.awt.Font;
import java.awt.Graphics;
import java.awt.Image;
import java.awt.Point;
import java.awt.event.ActionEvent;
import java.awt.event.MouseEvent;
import java.awt.image.BufferedImage;
import java.awt.image.RenderedImage;
import java.io.File;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JLabel;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JDialog;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JSpinner;
import javax.swing.SpinnerNumberModel;

/**
 *
 * @author Lourdes Couto
 */
public class EstiloFuncionalidad extends javax.swing.JFrame {

    private DefaultComboBoxModel modelo_tipo_sub = new DefaultComboBoxModel();
    private DefaultComboBoxModel modelo_grosor_sub = new DefaultComboBoxModel();
    private Graphics grafico;
    private Graphics grafico_vacio;
    private Font fuente;
    private Color color_fondo;
    private Color color_letra;
    private Color color_subrayado;
    private Image imagen_fondo;
    private int grosor = 0;
    private int tipo_subrayado = 0;
    private int comienzo = 60;
    private int largo_centrado = 0;
    private int llamada_grosor = 0;
    private int llamada_tipo_subrayado = 0;
    private boolean con_imagen = false;
    
    /**
     * Creates new form EstiloFuncionalidad
     */
    public EstiloFuncionalidad() {
        initComponents();
        this.CargarCombos();
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlFondo = new javax.swing.JPanel();
        lblTitulo = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        pnlPanelSecundario = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        lblColorFondo = new javax.swing.JLabel();
        txtColorFondo = new javax.swing.JTextField();
        btnColorFondo = new javax.swing.JButton();
        txtTipoLetra = new javax.swing.JTextField();
        btnTipoLetra = new javax.swing.JButton();
        lblColorLetra = new javax.swing.JLabel();
        txtColorLetra = new javax.swing.JTextField();
        btnColorLetra = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtColorSubrayado = new javax.swing.JTextField();
        lblColorSubrayado = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        btnColorSubrayado = new javax.swing.JButton();
        lblTexto = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtTitulo = new javax.swing.JTextArea();
        cmbTipoSubrayado = new javax.swing.JComboBox<>();
        cmbGrosorSubrayado = new javax.swing.JComboBox<>();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtDirectorio = new javax.swing.JTextArea();
        btnDirectorio = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        txtArchivo = new javax.swing.JTextField();
        spnLargoTitulo = new javax.swing.JSpinner();
        spnGrosorSubrayado = new javax.swing.JSpinner();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        lblArchivo = new javax.swing.JLabel();
        pnlVistaPrevia = new javax.swing.JPanel();
        lblMensaje = new javax.swing.JLabel();
        pnlBarra = new javax.swing.JPanel();
        btnCancelar = new javax.swing.JButton();
        btnValorPredeterminado = new javax.swing.JButton();
        btnAceptar = new javax.swing.JButton();
        btnCargarDatos = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentResized(java.awt.event.ComponentEvent evt) {
                formComponentResized(evt);
            }
        });

        pnlFondo.setBackground(new java.awt.Color(216, 207, 215));
        pnlFondo.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.gray));

        lblTitulo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Creador de Estilos para Titulos.png"))); // NOI18N
        lblTitulo.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);

        jLabel1.setText("Vista Previa: ");

        pnlPanelSecundario.setBackground(new java.awt.Color(247, 231, 191));
        pnlPanelSecundario.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel4.setText("Color de Letra: ");

        jLabel2.setText("Color o Imagen de Fondo: ");

        jLabel3.setText("Tipo de Letra: ");

        lblColorFondo.setBackground(new java.awt.Color(255, 255, 255));
        lblColorFondo.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        lblColorFondo.setOpaque(true);

        txtColorFondo.setToolTipText("");
        txtColorFondo.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        txtColorFondo.setDisabledTextColor(new java.awt.Color(51, 51, 51));
        txtColorFondo.setEnabled(false);

        btnColorFondo.setText("...");
        btnColorFondo.setActionCommand("ColorFondo");
        btnColorFondo.setEnabled(false);
        btnColorFondo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnColorFondoActionPerformed(evt);
            }
        });

        txtTipoLetra.setDisabledTextColor(new java.awt.Color(51, 51, 51));
        txtTipoLetra.setEnabled(false);

        btnTipoLetra.setText("...");
        btnTipoLetra.setActionCommand("TipoLetra");
        btnTipoLetra.setEnabled(false);
        btnTipoLetra.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTipoLetraActionPerformed(evt);
            }
        });

        lblColorLetra.setBackground(new java.awt.Color(255, 255, 255));
        lblColorLetra.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        lblColorLetra.setOpaque(true);

        txtColorLetra.setDisabledTextColor(new java.awt.Color(51, 51, 51));
        txtColorLetra.setEnabled(false);

        btnColorLetra.setText("...");
        btnColorLetra.setActionCommand("ColorLetra");
        btnColorLetra.setEnabled(false);
        btnColorLetra.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnColorLetraActionPerformed(evt);
            }
        });

        jLabel6.setText("Tipo de Subrayado: ");

        jLabel5.setText("Color del Subrayado:");

        txtColorSubrayado.setDisabledTextColor(new java.awt.Color(51, 51, 51));
        txtColorSubrayado.setEnabled(false);

        lblColorSubrayado.setBackground(new java.awt.Color(255, 255, 255));
        lblColorSubrayado.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        lblColorSubrayado.setOpaque(true);

        jLabel7.setText("Grosor del Subrayado:");

        btnColorSubrayado.setText("...");
        btnColorSubrayado.setActionCommand("ColorSubrayado");
        btnColorSubrayado.setEnabled(false);
        btnColorSubrayado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnColorSubrayadoActionPerformed(evt);
            }
        });

        lblTexto.setText("Texto:");

        txtTitulo.setColumns(20);
        txtTitulo.setRows(5);
        txtTitulo.setEnabled(false);
        txtTitulo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtTituloKeyReleased(evt);
            }
        });
        jScrollPane1.setViewportView(txtTitulo);

        cmbTipoSubrayado.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "uno", "dos", "tres" }));
        cmbTipoSubrayado.setEnabled(false);
        cmbTipoSubrayado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbTipoSubrayadoActionPerformed(evt);
            }
        });

        cmbGrosorSubrayado.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "uno", "dos", "tres" }));
        cmbGrosorSubrayado.setEnabled(false);
        cmbGrosorSubrayado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbGrosorSubrayadoActionPerformed(evt);
            }
        });

        txtDirectorio.setColumns(20);
        txtDirectorio.setRows(5);
        txtDirectorio.setText("C:\\Users\\Lourdes\\Desktop\\Trabajos\\ProyVideojuegoScrabbleNumber\\Programa\\TitulosFuncionalidades");
        txtDirectorio.setDisabledTextColor(new java.awt.Color(51, 51, 51));
        txtDirectorio.setEnabled(false);
        jScrollPane2.setViewportView(txtDirectorio);

        btnDirectorio.setText("...");
        btnDirectorio.setActionCommand("ColorSubrayado");
        btnDirectorio.setEnabled(false);
        btnDirectorio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDirectorioActionPerformed(evt);
            }
        });

        jLabel9.setText("Guardar en:");

        jLabel11.setText("Nombre del Archivo:");

        txtArchivo.setText("Titulo.png");
        txtArchivo.setDisabledTextColor(new java.awt.Color(51, 51, 51));
        txtArchivo.setEnabled(false);

        spnLargoTitulo.setEnabled(false);
        spnLargoTitulo.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                spnLargoTituloStateChanged(evt);
            }
        });

        spnGrosorSubrayado.setEnabled(false);
        spnGrosorSubrayado.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                spnGrosorSubrayadoStateChanged(evt);
            }
        });

        jLabel12.setText("Grosor manual del subrayado en pixeles:");

        jLabel13.setText("Largo de la imagen a crear:");

        javax.swing.GroupLayout pnlPanelSecundarioLayout = new javax.swing.GroupLayout(pnlPanelSecundario);
        pnlPanelSecundario.setLayout(pnlPanelSecundarioLayout);
        pnlPanelSecundarioLayout.setHorizontalGroup(
            pnlPanelSecundarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlPanelSecundarioLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlPanelSecundarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlPanelSecundarioLayout.createSequentialGroup()
                        .addGroup(pnlPanelSecundarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlPanelSecundarioLayout.createSequentialGroup()
                                .addComponent(jLabel7)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(cmbGrosorSubrayado, javax.swing.GroupLayout.PREFERRED_SIZE, 263, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlPanelSecundarioLayout.createSequentialGroup()
                                .addComponent(lblTexto)
                                .addGap(18, 18, 18)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 347, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlPanelSecundarioLayout.createSequentialGroup()
                                .addGroup(pnlPanelSecundarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlPanelSecundarioLayout.createSequentialGroup()
                                        .addGroup(pnlPanelSecundarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel2)
                                            .addComponent(jLabel3)
                                            .addComponent(jLabel4))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                                    .addGroup(pnlPanelSecundarioLayout.createSequentialGroup()
                                        .addComponent(jLabel5)
                                        .addGap(33, 33, 33)))
                                .addGroup(pnlPanelSecundarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(pnlPanelSecundarioLayout.createSequentialGroup()
                                        .addComponent(lblColorSubrayado, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(txtColorSubrayado, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(btnColorSubrayado, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(pnlPanelSecundarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addGroup(pnlPanelSecundarioLayout.createSequentialGroup()
                                            .addGroup(pnlPanelSecundarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addGroup(pnlPanelSecundarioLayout.createSequentialGroup()
                                                    .addComponent(lblColorFondo, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                                .addGroup(pnlPanelSecundarioLayout.createSequentialGroup()
                                                    .addGroup(pnlPanelSecundarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addGroup(pnlPanelSecundarioLayout.createSequentialGroup()
                                                            .addComponent(lblColorLetra, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                            .addGap(10, 10, 10)
                                                            .addComponent(txtColorLetra))
                                                        .addGroup(pnlPanelSecundarioLayout.createSequentialGroup()
                                                            .addGap(37, 37, 37)
                                                            .addComponent(txtColorFondo))
                                                        .addComponent(txtTipoLetra))
                                                    .addGap(10, 10, 10)))
                                            .addGroup(pnlPanelSecundarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(btnColorFondo, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(btnTipoLetra, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, pnlPanelSecundarioLayout.createSequentialGroup()
                                            .addGap(240, 240, 240)
                                            .addComponent(btnColorLetra, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                            .addGroup(pnlPanelSecundarioLayout.createSequentialGroup()
                                .addComponent(jLabel6)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(cmbTipoSubrayado, javax.swing.GroupLayout.PREFERRED_SIZE, 263, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(36, 36, 36)
                        .addGroup(pnlPanelSecundarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnlPanelSecundarioLayout.createSequentialGroup()
                                .addGap(110, 110, 110)
                                .addComponent(lblArchivo)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(pnlPanelSecundarioLayout.createSequentialGroup()
                                .addGroup(pnlPanelSecundarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(pnlPanelSecundarioLayout.createSequentialGroup()
                                        .addComponent(jLabel9)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 321, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 18, Short.MAX_VALUE)
                                        .addComponent(btnDirectorio, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(pnlPanelSecundarioLayout.createSequentialGroup()
                                        .addGroup(pnlPanelSecundarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(pnlPanelSecundarioLayout.createSequentialGroup()
                                                .addComponent(jLabel11)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(txtArchivo, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(pnlPanelSecundarioLayout.createSequentialGroup()
                                                .addComponent(jLabel13)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(spnLargoTitulo, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                        .addGap(0, 0, Short.MAX_VALUE)))
                                .addContainerGap())))
                    .addGroup(pnlPanelSecundarioLayout.createSequentialGroup()
                        .addComponent(jLabel12)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(spnGrosorSubrayado, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        pnlPanelSecundarioLayout.setVerticalGroup(
            pnlPanelSecundarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlPanelSecundarioLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlPanelSecundarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnDirectorio)
                    .addGroup(pnlPanelSecundarioLayout.createSequentialGroup()
                        .addGroup(pnlPanelSecundarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel2)
                            .addComponent(lblColorFondo, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(pnlPanelSecundarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(txtColorFondo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(btnColorFondo)
                                .addComponent(jLabel9)))
                        .addGap(20, 20, 20)
                        .addGroup(pnlPanelSecundarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(txtTipoLetra, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnTipoLetra)))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(19, 19, 19)
                .addGroup(pnlPanelSecundarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlPanelSecundarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(lblColorLetra, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel4))
                    .addGroup(pnlPanelSecundarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtColorLetra, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnColorLetra)
                        .addComponent(jLabel11)
                        .addComponent(txtArchivo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 34, Short.MAX_VALUE)
                .addGroup(pnlPanelSecundarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(cmbTipoSubrayado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel13)
                    .addComponent(spnLargoTitulo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pnlPanelSecundarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel5)
                    .addComponent(lblColorSubrayado, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(pnlPanelSecundarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtColorSubrayado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnColorSubrayado)
                        .addComponent(lblArchivo)))
                .addGap(31, 31, 31)
                .addGroup(pnlPanelSecundarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(cmbGrosorSubrayado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27)
                .addGroup(pnlPanelSecundarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(spnGrosorSubrayado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(pnlPanelSecundarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlPanelSecundarioLayout.createSequentialGroup()
                        .addGap(35, 35, 35)
                        .addComponent(lblTexto))
                    .addGroup(pnlPanelSecundarioLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pnlVistaPrevia.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        pnlVistaPrevia.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                pnlVistaPreviaMouseDragged(evt);
            }
        });
        pnlVistaPrevia.addMouseWheelListener(new java.awt.event.MouseWheelListener() {
            public void mouseWheelMoved(java.awt.event.MouseWheelEvent evt) {
                pnlVistaPreviaMouseWheelMoved(evt);
            }
        });

        javax.swing.GroupLayout pnlVistaPreviaLayout = new javax.swing.GroupLayout(pnlVistaPrevia);
        pnlVistaPrevia.setLayout(pnlVistaPreviaLayout);
        pnlVistaPreviaLayout.setHorizontalGroup(
            pnlVistaPreviaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 823, Short.MAX_VALUE)
        );
        pnlVistaPreviaLayout.setVerticalGroup(
            pnlVistaPreviaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 89, Short.MAX_VALUE)
        );

        lblMensaje.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        lblMensaje.setForeground(new java.awt.Color(255, 0, 0));

        pnlBarra.setBackground(java.awt.Color.lightGray);
        pnlBarra.setBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.gray));

        btnCancelar.setText("Cancelar");
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });

        btnValorPredeterminado.setText("Volver  a Valor Predeterminado");
        btnValorPredeterminado.setEnabled(false);
        btnValorPredeterminado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnValorPredeterminadoActionPerformed(evt);
            }
        });

        btnAceptar.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btnAceptar.setText("Aceptar");
        btnAceptar.setEnabled(false);
        btnAceptar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAceptarActionPerformed(evt);
            }
        });

        btnCargarDatos.setText("Cargar Datos");
        btnCargarDatos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCargarDatosActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlBarraLayout = new javax.swing.GroupLayout(pnlBarra);
        pnlBarra.setLayout(pnlBarraLayout);
        pnlBarraLayout.setHorizontalGroup(
            pnlBarraLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlBarraLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(btnAceptar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnCargarDatos)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnValorPredeterminado)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnCancelar))
        );
        pnlBarraLayout.setVerticalGroup(
            pnlBarraLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlBarraLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(pnlBarraLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnCancelar)
                    .addComponent(btnValorPredeterminado)
                    .addComponent(btnAceptar)
                    .addComponent(btnCargarDatos)))
        );

        javax.swing.GroupLayout pnlFondoLayout = new javax.swing.GroupLayout(pnlFondo);
        pnlFondo.setLayout(pnlFondoLayout);
        pnlFondoLayout.setHorizontalGroup(
            pnlFondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lblTitulo, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
            .addComponent(pnlBarra, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(pnlFondoLayout.createSequentialGroup()
                .addGroup(pnlFondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlFondoLayout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addGroup(pnlFondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(lblMensaje, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(pnlFondoLayout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGap(24, 24, 24)
                                .addComponent(pnlVistaPrevia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18))))
                    .addGroup(pnlFondoLayout.createSequentialGroup()
                        .addGap(57, 57, 57)
                        .addComponent(pnlPanelSecundario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(68, Short.MAX_VALUE))
        );
        pnlFondoLayout.setVerticalGroup(
            pnlFondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlFondoLayout.createSequentialGroup()
                .addComponent(lblTitulo, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(pnlFondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlFondoLayout.createSequentialGroup()
                        .addGap(43, 43, 43)
                        .addComponent(jLabel1))
                    .addGroup(pnlFondoLayout.createSequentialGroup()
                        .addGap(11, 11, 11)
                        .addComponent(pnlVistaPrevia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(pnlPanelSecundario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(lblMensaje, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(pnlBarra, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlFondo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlFondo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
        // TODO add your handling code here:
        try
        {
            this.dispose();
        }
        catch(Exception ex)
        {
            this.lblMensaje.setForeground(Color.RED);
            this.lblMensaje.setText(ex.toString());
        }

    }//GEN-LAST:event_btnCancelarActionPerformed

    private void btnAceptarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAceptarActionPerformed
        // TODO add your handling code here:
        try
        {
            boolean esta_guardado = false;
            String mensaje_advertencia = "";
            
            if(((int)this.spnGrosorSubrayado.getValue() < 1  ||  (int)this.spnGrosorSubrayado.getValue()> 200) && this.spnGrosorSubrayado.isEnabled() == true)
            {
                this.lblMensaje.setText("Debe ingresar un valor situado entre 0 y 200 pixeles si la opción de ingreso es manual");
            }
            else if((int)this.spnLargoTitulo.getValue() < 30 || (int)this.spnLargoTitulo.getValue()>3000)
            {
                this.lblMensaje.setText("Debe ingresar un valor situado entre 30 y 3000 para el largo del archivo a crear");
            }
            else if(this.txtArchivo.getText()== "" || this.txtArchivo.getText()== ".png" || this.txtArchivo.getText().endsWith(".png") == false)
            {
                this.lblMensaje.setText("El nombre del archivo no de debe ser vacío o nulo y debe terminar con .png");
            }
            else if(this.ExisteArchivo() == true)
            {
                mensaje_advertencia = "Ya existe otro archivo con el nombre " + this.txtArchivo.getText() + " en el directorio: " + this.txtDirectorio.getText() + "¿Desea sobrescribirlo?";
                
                if(JOptionPane.showConfirmDialog(this, mensaje_advertencia, "Mensaje de Advertencia" , 0, 2) == 0)
                {
                    esta_guardado = this.GuardarImagen();
                
                    if(esta_guardado == true)
                    {
                        this.lblMensaje.setForeground(Color.BLACK);
                        this.lblMensaje.setText("Imagen creada exitosamente");
                    }
                    else
                    {
                        this.lblMensaje.setForeground(Color.RED);
                        this.lblMensaje.setText("La imagen no fue creada correctamente");
                    }
                }
                else
                {
                    this.lblMensaje.setForeground(Color.BLACK);
                    this.lblMensaje.setText("Operación Cancelada");
                }
            }
            else
            {
                esta_guardado = this.GuardarImagen();
                
                if(esta_guardado == true)
                {
                    this.lblMensaje.setForeground(Color.BLACK);
                    this.lblMensaje.setText("Imagen creada exitosamente");
                }
                else
                {
                    this.lblMensaje.setForeground(Color.RED);
                    this.lblMensaje.setText("La imagen no fue creada correctamente");
                }
            }
        }
        catch(Exception ex)
        {
            this.lblMensaje.setForeground(Color.RED);
            this.lblMensaje.setText(ex.toString());
        }
    }//GEN-LAST:event_btnAceptarActionPerformed

    private void btnValorPredeterminadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnValorPredeterminadoActionPerformed
        // TODO add your handling code here:
        try
        {
            this.ValoresPorDefecto();
        }
        catch(Exception ex)
        {
            this.lblMensaje.setForeground(Color.RED);
            this.lblMensaje.setText(ex.toString());
        }
    }//GEN-LAST:event_btnValorPredeterminadoActionPerformed

    private void formComponentResized(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentResized
        // TODO add your handling code here:
        try 
        {
            /*Re-establezco la ubicación de los controles a medida que voy modificando el tamaño de la pantalla*/
            int altura, largo;
            Point p;

            altura = this.getHeight();
            largo = this.getWidth();
        
            this.lblTitulo.setSize(largo, 29);
            this.pnlFondo.setSize(largo, altura);
            this.pnlBarra.setSize(largo, 31);
            this.btnAceptar.setSize(77,27);
            //this.txtTipoLetra.setSize(201,28);
            
            p = new Point(1, (altura - 70));
            this.pnlBarra.setLocation(p);
            p = new Point(largo - (btnCancelar.getWidth() + 20), 1);
            this.btnCancelar.setLocation(p);
            p = new Point(largo - (btnCancelar.getWidth() + btnValorPredeterminado.getWidth() + 20), 1);
            this.btnValorPredeterminado.setLocation(p);
            p = new Point(largo - (btnCancelar.getWidth() + btnValorPredeterminado.getWidth() + btnCargarDatos.getWidth() + 20), 2);
            this.btnCargarDatos.setLocation(p);
            p = new Point(largo - (btnCancelar.getWidth() + btnValorPredeterminado.getWidth() + btnCargarDatos.getWidth() +  btnAceptar.getWidth() + 20), 2);
            this.btnAceptar.setLocation(p);
            p = new Point(10, 376);
            this.lblTexto.setLocation(p);
            
        }
        catch(Exception ex)
        {
            this.lblMensaje.setForeground(Color.RED);
            this.lblMensaje.setText(ex.toString());
        }
         
    }//GEN-LAST:event_formComponentResized

    private void btnColorFondoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnColorFondoActionPerformed
        // TODO add your handling code here:
        try
        {
           PantallaColor pantalla_color = new PantallaColor(this, evt);
           pantalla_color.setVisible(true);
        }
        catch(Exception ex)
        {
            this.lblMensaje.setForeground(Color.RED);
            this.lblMensaje.setText(ex.toString());
        }
    }//GEN-LAST:event_btnColorFondoActionPerformed

    private void pnlVistaPreviaMouseWheelMoved(java.awt.event.MouseWheelEvent evt) {//GEN-FIRST:event_pnlVistaPreviaMouseWheelMoved
        // TODO add your handling code here:
          
       try
       {
        if(evt.getWheelRotation() > 0)
            {
                comienzo++;
                
            }
            else
            {   
                comienzo--;
            }        

           this.VerVistaPrevia();
       }
       catch(Exception ex)
       {
           this.lblMensaje.setForeground(Color.RED);
           this.lblMensaje.setText(ex.toString());
       }
    }//GEN-LAST:event_pnlVistaPreviaMouseWheelMoved

    private void pnlVistaPreviaMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pnlVistaPreviaMouseDragged
        // TODO add your handling code here:
        
        try
        {
            this.VerVistaPrevia(evt);
        }
        catch(Exception ex)
        {
            this.lblMensaje.setForeground(Color.RED);
            this.lblMensaje.setText(ex.toString());
        }
    }//GEN-LAST:event_pnlVistaPreviaMouseDragged

    private void btnCargarDatosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCargarDatosActionPerformed
        // TODO add your handling code here:
        try
        {     
            this.btnAceptar.setEnabled(true);
            this.btnValorPredeterminado.setEnabled(true);
            this.btnColorFondo.setEnabled(true);
            this.btnTipoLetra.setEnabled(true);
            this.btnColorLetra.setEnabled(true);
            this.btnColorSubrayado.setEnabled(true);
            this.cmbGrosorSubrayado.setEnabled(true);
            this.cmbTipoSubrayado.setEnabled(true);
            this.txtTitulo.setEnabled(true);  
            this.btnDirectorio.setEnabled(true);
            this.btnCargarDatos.setEnabled(false);
            this.txtArchivo.setEnabled(true);
            this.spnLargoTitulo.setEnabled(true);
            
            this.ValoresPorDefecto();
        }
        catch(Exception ex)
        {
            this.lblMensaje.setForeground(Color.RED);
            this.lblMensaje.setText(ex.toString());
        }
    }//GEN-LAST:event_btnCargarDatosActionPerformed

    private void btnColorLetraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnColorLetraActionPerformed
        // TODO add your handling code here:
         try
         {
             PantallaColor pantalla_color = new PantallaColor(this, evt);
             pantalla_color.setVisible(true);
         }
         catch(Exception ex)
         {
             this.lblMensaje.setForeground(Color.RED);
             this.lblMensaje.setText(ex.toString());
         }
    }//GEN-LAST:event_btnColorLetraActionPerformed

    private void btnColorSubrayadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnColorSubrayadoActionPerformed
        // TODO add your handling code here:
        try
        {
           PantallaColor pantalla_color = new PantallaColor(this, evt);
           pantalla_color.setVisible(true);
        }
        catch(Exception ex)
        {
            this.lblMensaje.setForeground(Color.RED);
            this.lblMensaje.setText(ex.toString());
        }
    }//GEN-LAST:event_btnColorSubrayadoActionPerformed

    private void btnTipoLetraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTipoLetraActionPerformed
        // TODO add your handling code here:
        try
        {
          CuadroTipoTexto pantalla_texto = new CuadroTipoTexto(this, evt);
          pantalla_texto.setVisible(true);
        }
        catch(Exception ex)
        {
            this.lblMensaje.setForeground(Color.RED);
            this.lblMensaje.setText(ex.toString());
        }
    }//GEN-LAST:event_btnTipoLetraActionPerformed

    private void txtTituloKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTituloKeyReleased
        // TODO add your handling code here:
        try
        {
            this.VerVistaPrevia();
            this.txtArchivo.setText(this.txtTitulo.getText() + ".png");
        }
        catch(Exception ex)
        {
            this.lblMensaje.setForeground(Color.RED);
            this.lblMensaje.setText(ex.toString());
        }
    }//GEN-LAST:event_txtTituloKeyReleased

    private void cmbTipoSubrayadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbTipoSubrayadoActionPerformed
        // TODO add your handling code here:
        try
        {
            switch(cmbTipoSubrayado.getSelectedIndex())
            {
               case 0:
                   tipo_subrayado = 0;
               break;

               case 1:
               tipo_subrayado = 1;
               break;

               case 2:
                tipo_subrayado = 2;
               break;

               case 3:
                  tipo_subrayado = 3;  
               break;
               
               case 4:
                tipo_subrayado = 4;    
               break;
                   
               case 5:
                    tipo_subrayado = 5;
               break;
               
               case 6:
                    tipo_subrayado = 6;
               break;        
               
               case 7:
                tipo_subrayado = 7;
               break;    
               
               case 8:
                   tipo_subrayado = 8;
               break;
               
               default:
                tipo_subrayado = 9;
            }
            
            if(this.llamada_tipo_subrayado > 1)
            {
                VerVistaPrevia();
            }
            else
            {
                this.llamada_tipo_subrayado = this.llamada_tipo_subrayado + 1;
            }
        }
        catch(Exception ex)
        {
            this.lblMensaje.setForeground(Color.RED);
            this.lblMensaje.setText(ex.toString());
        }
    }//GEN-LAST:event_cmbTipoSubrayadoActionPerformed

    private void cmbGrosorSubrayadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbGrosorSubrayadoActionPerformed
        // TODO add your handling code here:
        try
        {
            if(cmbGrosorSubrayado.getSelectedIndex() == 12)
            {
                this.spnGrosorSubrayado.setEnabled(true);
            }
            else
            {
                this.spnGrosorSubrayado.setEnabled(false);
                this.spnGrosorSubrayado.setValue(0);
                grosor = cmbGrosorSubrayado.getSelectedIndex() + 1 ;
            }
            
           if(this.llamada_grosor > 1)
            {
                VerVistaPrevia();
            }
            else
            {
                this.llamada_grosor = this.llamada_grosor + 1;
            }
        }
        catch(Exception ex)
        {
            this.lblMensaje.setForeground(Color.RED);
            this.lblMensaje.setText(ex.toString());
        }
    }//GEN-LAST:event_cmbGrosorSubrayadoActionPerformed

    private void btnDirectorioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDirectorioActionPerformed
        // TODO add your handling code here:
        try
        {
            JFileChooser fc = new JFileChooser();
            fc.setCurrentDirectory(new java.io.File("C:\\Users\\Lourdes"));
            fc.setDialogTitle("Seleccione una ubicacion");
            fc.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);  
            
            if(fc.showOpenDialog(this.btnDirectorio) == JFileChooser.APPROVE_OPTION)
            {
               this.txtDirectorio.setText(fc.getSelectedFile().getAbsolutePath());
            }
            else
            {
                 this.lblMensaje.setForeground(Color.BLACK);
                 this.lblMensaje.setText("Operacion Cancelada");
            
            }
        }
        catch(Exception ex)
        {
            this.lblMensaje.setForeground(Color.RED);
            this.lblMensaje.setText(ex.toString());
        }
        
    }//GEN-LAST:event_btnDirectorioActionPerformed

    private void spnGrosorSubrayadoStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_spnGrosorSubrayadoStateChanged
        // TODO add your handling code here:
          try
        {
           if((int)this.spnGrosorSubrayado.getValue() > 0)
           {
               grosor = (int)spnGrosorSubrayado.getValue();
               this.lblMensaje.setText("");
               this.VerVistaPrevia();
           }
           else
           {
               this.lblMensaje.setText("Debe ingresar un valor mayor a cero");
           }
        }
        catch(Exception ex)
        {
            this.lblMensaje.setForeground(Color.RED);
            this.lblMensaje.setText(ex.toString());
        }
    }//GEN-LAST:event_spnGrosorSubrayadoStateChanged

    private void spnLargoTituloStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_spnLargoTituloStateChanged
        // TODO add your handling code here:
         try
        {
           if((int)this.spnLargoTitulo.getValue() > 29)
           {
               largo_centrado = (int)spnLargoTitulo.getValue();
               this.lblMensaje.setText("");
               this.VerVistaPrevia();
           }
           else
           {
               this.lblMensaje.setText("Debe ingresar un valor mayor a 29 pixeles de largo");
           }
        }
        catch(Exception ex)
        {
            this.lblMensaje.setForeground(Color.RED);
            this.lblMensaje.setText(ex.toString());
        }
    }//GEN-LAST:event_spnLargoTituloStateChanged

    public void CargarCombos()
    {
        try 
        {
            /*Carga el combo que muestra los tipos de subrayado*/
            this.cmbTipoSubrayado.setRenderer(new RenderJCombobox());
            this.cmbTipoSubrayado.setSelectedIndex(0);

            for(int i = 0;  i<10 ; i++)
            {
                 modelo_tipo_sub.addElement(new JLabel(new ImageIcon(getClass().getResource("/TipoSubrayado/Tipo" + (i+1) + ".png"))));
            }

             this.cmbTipoSubrayado.setModel(modelo_tipo_sub);


             /*Cargar el combo que muestra los diferentes grosores de subrayado*/       
            this.cmbGrosorSubrayado.setRenderer(new RenderJCombobox());
            this.cmbGrosorSubrayado.setSelectedIndex(0);

            for(int i = 0; i<13 ; i++)
            {
                modelo_grosor_sub.addElement(new JLabel(new ImageIcon(getClass().getResource("/Subrayado/Pixel" + (i + 1) + ".png"))));
            }

            this.cmbGrosorSubrayado.setModel(modelo_grosor_sub); 
         
        }
        catch(Exception ex)
        {
            this.lblMensaje.setForeground(Color.RED);
            this.lblMensaje.setText(ex.toString());
        }
    
    }        
    
    public void ValoresPorDefecto()
    {
        try
        {
            /*Valores de los botones por defecto*/
            
            this.txtDirectorio.setText("C:\\Users\\Lourdes\\Desktop\\Trabajos\\ProyVideojuegoScrabbleNumber\\Programa\\TitulosFuncionalidades");
            //this.txtDirectorio.setText("C:\\Users\\Lourdes Couto\\Desktop\\Trabajos\\ProyVideojuegoScrabbleNumber\\Programa\\TitulosFuncionalidades");
            this.txtColorFondo.setText("(216,207,215)");
            this.lblColorFondo.setBackground(new Color(216,207,215));
            this.txtTipoLetra.setText("Ubuntu Light 18 Bold");
            this.txtColorLetra.setText("(48,48,48)");
            this.lblColorLetra.setBackground(new Color(48,48,48));
            this.cmbTipoSubrayado.setSelectedIndex(2);
            this.txtColorSubrayado.setText("(48,48,48)");
            this.lblColorSubrayado.setBackground(new Color(48,48,48));
            this.cmbGrosorSubrayado.setSelectedIndex(2);
            this.txtTitulo.setText("Titulo");
            //this.spnLargoTitulo.setValue(1200);
            
            /*Vista previa por defecto*/
           
            color_fondo = new Color(216, 207, 215);
            fuente = new  Font("Ubuntu Light", Font.BOLD, 18);
            color_letra = new Color(48,48,48);
            color_subrayado = new Color(48,48,48);
            grosor = 3;
            this.tipo_subrayado = 2;
            
            grafico_vacio = this.pnlVistaPrevia.getGraphics();
            grafico = grafico_vacio;
            
            grafico.setColor(color_fondo);
            grafico.fillRect(0, 0, 2868, 200);
            grafico.setFont(fuente);
            grafico.setColor(color_letra);
            grafico.drawString(this.txtTitulo.getText(), 10, comienzo);
            grafico.setColor(color_subrayado);
            grafico.fillRect(0, 65, 2868 , grosor);
            
        }
        catch(Exception ex)
        {
            this.lblMensaje.setForeground(Color.RED);
            this.lblMensaje.setText(ex.toString());
        }
    }
    
    public void VerVistaPrevia()
    {
        try
        {
            this.pnlVistaPrevia.paint(grafico_vacio);
            grafico = this.pnlVistaPrevia.getGraphics();
            
            if(this.con_imagen == true)
            {
                grafico.drawImage(imagen_fondo, 0, 0, null);
            }
            else
            {
                grafico.setColor(color_fondo);
                grafico.fillRect(0, 0, 2868, 200);
            }
            
            switch(tipo_subrayado)
            {
               case 0:
                   grafico.setColor(color_subrayado);
                   grafico.fillRect(0, comienzo - 5, 135, grosor);
                   grafico.setFont(fuente);
                   grafico.setColor(color_letra);
                   grafico.drawString(this.txtTitulo.getText(), 150, comienzo);
                   grafico.setColor(color_subrayado);
                   grafico.fillRect(this.txtTitulo.getText().length() * (fuente.getSize() - 8) + 145, comienzo - 5, 500, grosor);
                   this.spnLargoTitulo.setEnabled(true);
                   
               break;
                  
               case 1:
                    
                   grafico.setColor(color_subrayado);
                   for (int i = 0; i < (135/(grosor + 2)); i++)
                   {
                       grafico.fillRect(0 + (i * ((int) (1.3 * grosor) + 1 )), comienzo - 5, (int) (1.3 * grosor), grosor);
                   }
                   
                   grafico.setFont(fuente);
                   grafico.setColor(color_letra);
                   grafico.drawString(this.txtTitulo.getText(), 145, comienzo);
                   
                   grafico.setColor(color_subrayado);
                   for (int i = 0; i < 500/(grosor + 2); i++)
                   {   
                       grafico.fillRect(this.txtTitulo.getText().length() * (fuente.getSize() - 8) + (i * ((int) (1.3 * grosor) + 1 )) + 145, comienzo - 5, (int) (1.3 * grosor), grosor);
                   }
                   this.spnLargoTitulo.setEnabled(true);
                   
               break;

               case 2:
                   
                grafico.setFont(fuente);
                grafico.setColor(color_letra);
                grafico.drawString(this.txtTitulo.getText(), 10, comienzo);
                grafico.setColor(color_subrayado);
                grafico.fillRect(0, comienzo + 5, 2868 , grosor);
                this.spnLargoTitulo.setEnabled(true);
                //this.spnLargoTitulo.setValue(0);
               
               break;

               case 3:
                   
                   grafico.setFont(fuente);
                   grafico.setColor(color_letra);
                   grafico.drawString(this.txtTitulo.getText(), 10, comienzo);
                   grafico.setColor(color_subrayado);
                   grafico.fillRect(0, comienzo + 5, 2868 , grosor);
                   grafico.fillRect(0, comienzo + 8 + grosor, 2868 , grosor);
                   this.spnLargoTitulo.setEnabled(true);
                   //this.spnLargoTitulo.setValue(0);
                   
               break;
               
               case 4:
                grafico.setFont(fuente);
                grafico.setColor(color_letra);
                grafico.drawString(this.txtTitulo.getText(), 10, 60);
                
                grafico.setColor(color_subrayado); 
                for(int  i  = 0;  i< 1600 ; i++)
                {
                     grafico.fillRect(0 + (i * 4 * grosor), comienzo + 5, (grosor * 2), grosor);
                    
                }    
                this.spnLargoTitulo.setEnabled(true);
                //this.spnLargoTitulo.setValue(0);
                
               break;
                   
               case 5:
                grafico.setFont(fuente);
                grafico.setColor(color_letra);
                grafico.drawString(this.txtTitulo.getText(), 10, comienzo);              
                grafico.setColor(color_subrayado); 
                for(int  i  = 0;  i< 1600 ; i++)
                {
                     grafico.fillRect(0 + (i * 6 * grosor), comienzo + 5, grosor * 3, grosor);
                    
                } 
                this.spnLargoTitulo.setEnabled(true);
               // this.spnLargoTitulo.setValue(0);
                
               break;
               
               case 6:
                grafico.setFont(fuente);
                grafico.setColor(color_letra);
                grafico.drawString(this.txtTitulo.getText(), 10, comienzo);
                
                grafico.setColor(color_subrayado); 
                for(int  i  = 0;  i< 1600 ; i++)
                {
                     grafico.fillRect(0 + (i * 2 * grosor), comienzo + 5, grosor, grosor);
                    
                } 
                this.spnLargoTitulo.setEnabled(true);
                //this.spnLargoTitulo.setValue(0);
                    
               break;        
               
               case 7:
                grafico.setFont(fuente);
                grafico.setColor(color_letra);
                grafico.drawString(this.txtTitulo.getText(), 10, comienzo);
                
                grafico.setColor(color_subrayado); 
                for(int  i  = 0;  i< 1600 ; i++)
                {
                     grafico.fillRect(0 + (i * 6 * grosor), comienzo + 5, grosor * 3, grosor);
                     grafico.fillRect(0 + (i * 2 * grosor), comienzo + 5, grosor, grosor);
                } 
                this.spnLargoTitulo.setEnabled(true); 
                //this.spnLargoTitulo.setValue(0);
                
               break;    
               
               case 8:
                grafico.setFont(fuente);
                grafico.setColor(color_letra);
                grafico.drawString(this.txtTitulo.getText(), 10, comienzo);
                
                grafico.setColor(color_subrayado); 
                for(int  i  = 0;  i< 1600 ; i++)
                {
                     grafico.fillRect(0 + (i * 6 * grosor), comienzo + 5, grosor * 3, grosor);
                     grafico.fillRect(1 + (i * 4 * grosor), comienzo + 5, (grosor * 2), grosor);
                } 
                this.spnLargoTitulo.setEnabled(true); 
                //this.spnLargoTitulo.setValue(0);
                break;
               
               default:
                   
                grafico.setFont(fuente);
                grafico.setColor(color_letra);
                grafico.drawString(this.txtTitulo.getText(), 10, comienzo);
                
                this.spnLargoTitulo.setEnabled(true);
                //this.spnLargoTitulo.setValue(0);
//                 grafico.fillRect(10 + (i * 8 * grosor), 65, grosor * 3, grosor);
//                 grafico.fillRect(10 + (i * 2 * grosor), 65, (grosor * 1), grosor);
                    
            }
            
        }
        catch(Exception ex)
        {
            this.lblMensaje.setForeground(Color.RED);
            this.lblMensaje.setText(ex.toString());
        }
    }
    
    public void VerVistaPrevia(MouseEvent evt)
    {
        try
        {
            this.pnlVistaPrevia.paint(grafico_vacio);
            grafico = this.pnlVistaPrevia.getGraphics();
            
            if(this.con_imagen == true)
            {
                grafico.drawImage(imagen_fondo, 0, 0, null);
            }
            else
            {
                grafico.setColor(color_fondo);
                grafico.fillRect(0, 0, 2868, 200);
            }
           
            switch(tipo_subrayado)
            {
               case 0:
                   grafico.setColor(color_subrayado);
                   grafico.fillRect(evt.getX(), evt.getY()-5, 135, grosor);
                   grafico.setFont(fuente);
                   grafico.setColor(color_letra);
                   grafico.drawString(this.txtTitulo.getText(), evt.getX() + 150, evt.getY());
                   grafico.setColor(color_subrayado);
                   grafico.fillRect(evt.getX() + this.txtTitulo.getText().length() * (fuente.getSize() - 8) + 145, evt.getY() - 5, 500, grosor);
                   
                                     
               break;
                  
               case 1:
                    
                   grafico.setColor(color_subrayado);
                   for (int i = 0; i< 135/(grosor + 2); i++)
                   {
                       grafico.fillRect(evt.getX() + (i * ((int) (1.3 * grosor) + 1 )), evt.getY() - 5, (int) (1.3 * grosor), grosor);
                   }
                   
                   grafico.setFont(fuente);
                   grafico.setColor(color_letra);
                   grafico.drawString(this.txtTitulo.getText(),evt.getX() + 150, evt.getY());
                   
                   grafico.setColor(color_subrayado);
                   for (int i = 0; i< 500/(grosor + 2); i++)
                   {   
                       grafico.fillRect(evt.getX() + this.txtTitulo.getText().length() * (fuente.getSize() - 8) + (i * ((int) (1.3 * grosor) + 1 )) + 145, evt.getY() - 5, (int) (1.3 * grosor), grosor);
                   }
                   
               break;

               case 2:
                   
                grafico.setFont(fuente);
                grafico.setColor(color_letra);
                grafico.drawString(this.txtTitulo.getText(), evt.getX(), evt.getY());
                grafico.setColor(color_subrayado);
                grafico.fillRect(evt.getX(), evt.getY() + 5, 2868 , grosor);
               
               break;

               case 3:
                   
                   grafico.setFont(fuente);
                   grafico.setColor(color_letra);
                   grafico.drawString(this.txtTitulo.getText(), evt.getX(), evt.getY());
                   grafico.setColor(color_subrayado);
                   grafico.fillRect(evt.getX(), evt.getY() + 5, 2868 , grosor);
                   grafico.fillRect(evt.getX(), evt.getY() + 8 + grosor, 2868 , grosor);
                   
               break;
               
               case 4:
                grafico.setFont(fuente);
                grafico.setColor(color_letra);
                grafico.drawString(this.txtTitulo.getText(), evt.getX(), evt.getY());
                
                grafico.setColor(color_subrayado); 
                for(int  i  = 0;  i< 1600 ; i++)
                {
                     grafico.fillRect(evt.getX() + 10 + (i * 4 * grosor), evt.getY() + 5, (grosor * 2), grosor);
                    
                }    
                   
               break;
                   
               case 5:
                grafico.setFont(fuente);
                grafico.setColor(color_letra);
                grafico.drawString(this.txtTitulo.getText(), evt.getX(), evt.getY());
                
                grafico.setColor(color_subrayado); 
                for(int  i  = 0;  i< 1600 ; i++)
                {
                     grafico.fillRect(evt.getX() + 10 + (i * 6 * grosor), evt.getY() + 5, grosor * 3, grosor);
                    
                } 
                   
               break;
               
               case 6:
                grafico.setFont(fuente);
                grafico.setColor(color_letra);
                grafico.drawString(this.txtTitulo.getText(), evt.getX(), evt.getY());
                
                grafico.setColor(color_subrayado); 
                for(int  i  = 0;  i< 1600 ; i++)
                {
                     grafico.fillRect(evt.getX() + 10 + (i * 2 * grosor), evt.getY() + 5, grosor, grosor);
                    
                } 
                    
               break;        
               
               case 7:
                grafico.setFont(fuente);
                grafico.setColor(color_letra);
                grafico.drawString(this.txtTitulo.getText(), evt.getX(), evt.getY());
                
                grafico.setColor(color_subrayado); 
                for(int  i  = 0;  i< 1600 ; i++)
                {
                     grafico.fillRect(evt.getX() + 10 + (i * 6 * grosor), evt.getY() + 5, grosor * 3, grosor);
                     grafico.fillRect(evt.getX() + 10 + (i * 2 * grosor), evt.getY() + 5, grosor, grosor);
                } 
                  
               break;    
               
               case 8:
                grafico.setFont(fuente);
                grafico.setColor(color_letra);
                grafico.drawString(this.txtTitulo.getText(), evt.getX(), evt.getY());
                
                grafico.setColor(color_subrayado); 
                for(int  i  = 0;  i< 1600 ; i++)
                {
                     grafico.fillRect(evt.getX() + 10 + (i * 6 * grosor), evt.getY() + 5, grosor * 3, grosor);
                     grafico.fillRect(evt.getX() + 11 + (i * 4 * grosor), evt.getY() + 5, (grosor * 2), grosor);
                } 
                   break;
               
               default:
               
                grafico.setFont(fuente);
                grafico.setColor(color_letra);
                grafico.drawString(this.txtTitulo.getText(), evt.getX(), evt.getY());
                   
//                 grafico.fillRect(10 + (i * 8 * grosor), 65, grosor * 3, grosor);
//                 grafico.fillRect(10 + (i * 2 * grosor), 65, (grosor * 1), grosor);
                   
            }
            
        }
        catch(Exception ex)
        {
            this.lblMensaje.setForeground(Color.RED);
            this.lblMensaje.setText(ex.toString());
        }
    }
    
    public boolean GuardarImagen()
    {
     
        boolean retorno = false; 
        
        try
        {
           BufferedImage imagen = new BufferedImage((int)this.spnLargoTitulo.getValue(), fuente.getSize() + 55, BufferedImage.TYPE_INT_ARGB);
            
            if(this.con_imagen == true)
            {
                imagen = new BufferedImage(imagen_fondo.getWidth(this), fuente.getSize() + 55, BufferedImage.TYPE_INT_ARGB);
                grafico = imagen.getGraphics();
                grafico.drawImage(imagen_fondo, 0, 0, null);
            }
            else
            {
                grafico = imagen.getGraphics();
                grafico.setColor(color_fondo);
                grafico.fillRect(0, 0, 2868, 200);
            }
           
            switch(tipo_subrayado)
            {
               case 0:
                   grafico.setColor(color_subrayado);
                   grafico.fillRect(0, fuente.getSize() + 45, (int)((int)this.spnLargoTitulo.getValue()/2), grosor);
                   grafico.setFont(fuente);
                   grafico.setColor(color_letra);
                   grafico.drawString(this.txtTitulo.getText(), (int)((int)this.spnLargoTitulo.getValue()/2) + 15, fuente.getSize() + 50);
                   grafico.setColor(color_subrayado);
                   grafico.fillRect(this.txtTitulo.getText().length() * (fuente.getSize() - 8) + (int)((int)this.spnLargoTitulo.getValue()/2), fuente.getSize() + 45, 500, grosor);
               break;
                  
               case 1:
                    
                   grafico.setColor(color_subrayado);
                   for (int i = 0; i<(int)((int)this.spnLargoTitulo.getValue()/grosor + 2); i++)
                   {
                       grafico.fillRect(0 + (i * ((int) (1.3 * grosor) + 1 )), fuente.getSize() + 45, (int) (1.3 * grosor), grosor);
                   }
                   
                   grafico.setFont(fuente);
                   grafico.setColor(color_letra);
                   grafico.drawString(this.txtTitulo.getText(), (int)((int)this.spnLargoTitulo.getValue()/2) + 15, fuente.getSize() + 50);
                   
                   grafico.setColor(color_subrayado);
                   for (int i = 0; i<(int)((int)this.spnLargoTitulo.getValue()/grosor + 2); i++)
                   {   
                       grafico.fillRect(this.txtTitulo.getText().length() * (fuente.getSize() - 8) + (i * ((int) (1.3 * grosor) + 1 )) + 145, fuente.getSize() + 45, (int) (1.3 * grosor), grosor);
                   }
                   
               break;

               case 2:
                   
                grafico.setFont(fuente);
                grafico.setColor(color_letra);
                grafico.drawString(this.txtTitulo.getText(), 10, fuente.getSize() + 45);
                grafico.setColor(color_subrayado);
                grafico.fillRect(0, fuente.getSize() + 50, (int)this.spnLargoTitulo.getValue() , grosor);
               
               break;

               case 3:
                   
                   grafico.setFont(fuente);
                   grafico.setColor(color_letra);
                   grafico.drawString(this.txtTitulo.getText(), 10, fuente.getSize() + 42);
                   grafico.setColor(color_subrayado);
                   grafico.fillRect(0, fuente.getSize() + 45, (int)this.spnLargoTitulo.getValue() , grosor);
                   grafico.fillRect(0, fuente.getSize() + 48 + grosor, (int)this.spnLargoTitulo.getValue() , grosor);
                   
               break;
               
               case 4:
                grafico.setFont(fuente);
                grafico.setColor(color_letra);
                grafico.drawString(this.txtTitulo.getText(), 10, fuente.getSize() + 45);
                
                grafico.setColor(color_subrayado); 
                for(int  i  = 0;  i< (int)((int)this.spnLargoTitulo.getValue()/4) ; i++)
                {
                     grafico.fillRect(0 + (i * 4 * grosor), fuente.getSize() + 50, (grosor * 2), grosor);
                    
                }    
                   
               break;
                   
               case 5:
                grafico.setFont(fuente);
                grafico.setColor(color_letra);
                grafico.drawString(this.txtTitulo.getText(), 10, fuente.getSize() + 45);
                
                grafico.setColor(color_subrayado); 
                for(int  i  = 0;  i< (int)((int)this.spnLargoTitulo.getValue()/6) ; i++)
                {
                     grafico.fillRect(0 + (i * 6 * grosor), fuente.getSize() + 50, grosor * 3, grosor);
                    
                } 
                   
               break;
               
               case 6:
                grafico.setFont(fuente);
                grafico.setColor(color_letra);
                grafico.drawString(this.txtTitulo.getText(), 10, fuente.getSize() + 45);
                
                grafico.setColor(color_subrayado); 
                for(int  i  = 0;  i< (int)((int)this.spnLargoTitulo.getValue()/2) ; i++)
                {
                     grafico.fillRect(0 + (i * 2 * grosor), fuente.getSize() + 50, grosor, grosor);
                    
                } 
                    
               break;        
               
               case 7:
                grafico.setFont(fuente);
                grafico.setColor(color_letra);
                grafico.drawString(this.txtTitulo.getText(), 10, fuente.getSize() + 45);
                
                grafico.setColor(color_subrayado); 
                for(int  i  = 0;  i< (int)((int)this.spnLargoTitulo.getValue()/4) ; i++)
                {
                     grafico.fillRect(0 + (i * 6 * grosor), fuente.getSize() + 50, grosor * 3, grosor);
                     grafico.fillRect(0 + (i * 2 * grosor), fuente.getSize() + 50, grosor, grosor);
                } 
                  
               break;    
               
               case 8:
                grafico.setFont(fuente);
                grafico.setColor(color_letra);
                grafico.drawString(this.txtTitulo.getText(), 10, fuente.getSize() + 45);
                
                grafico.setColor(color_subrayado); 
                for(int  i  = 0;  i< (int)((int)this.spnLargoTitulo.getValue()/5) ; i++)
                {
                     grafico.fillRect(0 + (i * 6 * grosor), fuente.getSize() + 50, grosor * 3, grosor);
                     grafico.fillRect(1 + (i * 4 * grosor), fuente.getSize() + 50, (grosor * 2), grosor);
                } 
                   
                   break;
               
               default:
                grafico.setFont(fuente);
                grafico.setColor(color_letra);
                grafico.drawString(this.txtTitulo.getText(), 10, fuente.getSize() + 45);
                   
//                 grafico.fillRect(10 + (i * 8 * grosor), 65, grosor * 3, grosor);
//                 grafico.fillRect(10 + (i * 2 * grosor), 65, (grosor * 1), grosor);
                    
            }
            
            //ImageIO.write((RenderedImage) imagen, "png", new File("C:\\Users\\Lourdes\\Desktop\\Trabajos\\ProyVideojuegoScrabbleNumber\\Programa\\TitulosFuncionalidades\\DibujoPrueba11.png"));
          retorno = ImageIO.write((RenderedImage) imagen, "png", new File(this.txtDirectorio.getText() + "\\" + this.txtArchivo.getText()));
        
        }
        catch(Exception ex)
        {
            this.lblMensaje.setForeground(Color.RED);
            this.lblMensaje.setText(ex.toString());
        }
            return retorno;
    }
    
    public boolean ExisteArchivo()
    {
        boolean retorno = false;
        try
        {
            File lista_archivo = new File(this.txtDirectorio.getText());
            String archivo = this.txtArchivo.getText();
            
           for(String s: lista_archivo.list())
           {
               if(s.equals(archivo) == true)
               {
                   retorno = true;
               }
           }
        }
         catch(Exception ex)
        {
            this.lblMensaje.setForeground(Color.RED);
            this.lblMensaje.setText(ex.toString());
        }
        
        return retorno;
    }
    
    public void EstablecerTipoFuente(Font pFuente, ActionEvent evt)
    {
        try
        {
           String estilo_fuente = "";

           switch(pFuente.getStyle())
           {
               case 0:
               estilo_fuente = "Plain";
               break;

               case 1:
               estilo_fuente = "Bold";
               break;

               case 2:
               estilo_fuente = "Italic";
               break;

               default:
               estilo_fuente = "Bold Italic";
           }

            this.txtTipoLetra.setText("" + pFuente.getFontName() + " " + estilo_fuente + " " + pFuente.getSize());
            this.fuente = pFuente;
            this.VerVistaPrevia();
        }
        catch(Exception ex)
        {
            this.lblMensaje.setForeground(Color.RED);
            this.lblMensaje.setText(ex.toString());
        }
    }
    
    public void EstablecerColorFondo(Color pColor ,ActionEvent evt)
    {
        try
        {
           switch(evt.getActionCommand())
           {
               case "ColorFondo":
               this.lblColorFondo.setIcon(null);
               this.lblColorFondo.setBackground(pColor);
               this.txtColorFondo.setText("(" + pColor.getRed() + "," + pColor.getGreen() + "," + pColor.getBlue() + ")");       
               this.color_fondo = pColor;
               this.con_imagen = false;               
               break;

               case "ColorLetra":
               this.lblColorLetra.setBackground(pColor);
               this.txtColorLetra.setText("(" + pColor.getRed() + "," + pColor.getGreen() + "," + pColor.getBlue() + ")");       
               this.color_letra = pColor;
               break;

               default:
               this.lblColorSubrayado.setBackground(pColor);
               this.txtColorSubrayado.setText("(" + pColor.getRed() + "," + pColor.getGreen() + "," + pColor.getBlue() + ")");       
               this.color_subrayado = pColor;
           }

           this.VerVistaPrevia();
        }
        catch(Exception ex)
        {
            this.lblMensaje.setForeground(Color.RED);
            this.lblMensaje.setText(ex.toString());
        }
    }
    
    public void EstablecerImagenFondo(Image pImage ,String pArchivo , ActionEvent evt)
    {
        try
        {
            this.lblColorFondo.setBackground(Color.WHITE);
            this.txtColorFondo.setText("imagen");
//            this.pnlVistaPrevia.paint(grafico_vacio);
//            grafico = this.pnlVistaPrevia.getGraphics();
//            grafico.setColor(Color.RED);
//            grafico.fillRect(0, 0, 2868, 200);
            this.imagen_fondo = pImage;
            this.con_imagen = true;
            this.VerVistaPrevia();
        }
        catch(Exception ex)
        {
            this.lblMensaje.setForeground(Color.RED);
            this.lblMensaje.setText(ex.toString());
        }
    }
    
  
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(EstiloFuncionalidad.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(EstiloFuncionalidad.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(EstiloFuncionalidad.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(EstiloFuncionalidad.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new EstiloFuncionalidad().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAceptar;
    private javax.swing.JButton btnCancelar;
    private javax.swing.JButton btnCargarDatos;
    private javax.swing.JButton btnColorFondo;
    private javax.swing.JButton btnColorLetra;
    private javax.swing.JButton btnColorSubrayado;
    private javax.swing.JButton btnDirectorio;
    private javax.swing.JButton btnTipoLetra;
    private javax.swing.JButton btnValorPredeterminado;
    private javax.swing.JComboBox<String> cmbGrosorSubrayado;
    private javax.swing.JComboBox<String> cmbTipoSubrayado;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblArchivo;
    private javax.swing.JLabel lblColorFondo;
    private javax.swing.JLabel lblColorLetra;
    private javax.swing.JLabel lblColorSubrayado;
    private javax.swing.JLabel lblMensaje;
    private javax.swing.JLabel lblTexto;
    private javax.swing.JLabel lblTitulo;
    private javax.swing.JPanel pnlBarra;
    private javax.swing.JPanel pnlFondo;
    private javax.swing.JPanel pnlPanelSecundario;
    private javax.swing.JPanel pnlVistaPrevia;
    private javax.swing.JSpinner spnGrosorSubrayado;
    private javax.swing.JSpinner spnLargoTitulo;
    private javax.swing.JTextField txtArchivo;
    private javax.swing.JTextField txtColorFondo;
    private javax.swing.JTextField txtColorLetra;
    private javax.swing.JTextField txtColorSubrayado;
    private javax.swing.JTextArea txtDirectorio;
    private javax.swing.JTextField txtTipoLetra;
    private javax.swing.JTextArea txtTitulo;
    // End of variables declaration//GEN-END:variables
}
